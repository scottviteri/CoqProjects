DIGEST 5a7b86962d81456d57f059c99f902639
FTactics
R61:64 Poly <> <> lib
prf 76:81 <> silly1
R103:105 Coq.Init.Datatypes <> nat ind
R116:119 Coq.Init.Logic <> :type_scope:x_'->'_x not
R133:136 Coq.Init.Logic <> :type_scope:x_'->'_x not
R142:144 Coq.Init.Logic <> :type_scope:x_'='_x not
R137:137 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R139:139 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R141:141 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R138:138 Tactics <> n var
R140:140 Tactics <> o var
R145:145 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R147:147 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R149:149 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R146:146 Tactics <> m var
R148:148 Tactics <> p var
R125:127 Coq.Init.Logic <> :type_scope:x_'='_x not
R120:120 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R122:122 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R124:124 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R121:121 Tactics <> n var
R123:123 Tactics <> o var
R128:128 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R130:130 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R132:132 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R129:129 Tactics <> n var
R131:131 Tactics <> p var
R112:114 Coq.Init.Logic <> :type_scope:x_'='_x not
R111:111 Tactics <> n var
R115:115 Tactics <> m var
prf 228:233 <> silly2
R255:257 Coq.Init.Datatypes <> nat ind
R271:279 Coq.Init.Logic <> :type_scope:x_'->'_x not
R280:280 Coq.Init.Logic <> :type_scope:x_'->'_x not
R323:332 Coq.Init.Logic <> :type_scope:x_'->'_x not
R338:340 Coq.Init.Logic <> :type_scope:x_'='_x not
R333:333 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R335:335 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R337:337 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R334:334 Tactics <> n var
R336:336 Tactics <> o var
R341:341 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R343:343 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R345:345 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R342:342 Tactics <> m var
R344:344 Tactics <> p var
R295:297 Coq.Init.Datatypes <> nat ind
R306:309 Coq.Init.Logic <> :type_scope:x_'->'_x not
R315:317 Coq.Init.Logic <> :type_scope:x_'='_x not
R310:310 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R312:312 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R314:314 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R311:311 Tactics <> q var
R313:313 Tactics <> o var
R318:318 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R320:320 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R322:322 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R319:319 Tactics <> r var
R321:321 Tactics <> p var
R302:304 Coq.Init.Logic <> :type_scope:x_'='_x not
R301:301 Tactics <> q var
R305:305 Tactics <> r var
R267:269 Coq.Init.Logic <> :type_scope:x_'='_x not
R266:266 Tactics <> n var
R270:270 Tactics <> m var
prf 434:441 <> silly_ex
R445:445 Coq.Init.Logic <> :type_scope:x_'->'_x not
R491:500 Coq.Init.Logic <> :type_scope:x_'->'_x not
R515:523 Coq.Init.Logic <> :type_scope:x_'->'_x not
R530:532 Coq.Init.Logic <> :type_scope:x_'='_x not
R524:527 Basics <> oddb def
R533:536 Basics <> true constr
R508:510 Coq.Init.Logic <> :type_scope:x_'='_x not
R501:505 Basics <> evenb def
R511:514 Basics <> true constr
R470:473 Coq.Init.Logic <> :type_scope:x_'->'_x not
R484:486 Coq.Init.Logic <> :type_scope:x_'='_x not
R474:477 Basics <> oddb def
R480:480 Coq.Init.Datatypes <> S constr
R482:482 Tactics <> n var
R487:490 Basics <> true constr
R463:465 Coq.Init.Logic <> :type_scope:x_'='_x not
R456:460 Basics <> evenb def
R462:462 Tactics <> n var
R466:469 Basics <> true constr
prf 590:595 <> silly3
R611:613 Coq.Init.Datatypes <> nat ind
R640:648 Coq.Init.Logic <> :type_scope:x_'->'_x not
R668:670 Coq.Init.Logic <> :type_scope:x_'='_x not
R649:655 Basics <> beq_nat def
R658:658 Coq.Init.Datatypes <> S constr
R661:661 Coq.Init.Datatypes <> S constr
R663:663 Tactics <> n var
R671:674 Basics <> true constr
R626:628 Coq.Init.Logic <> :type_scope:x_'='_x not
R622:625 Basics <> true constr
R629:635 Basics <> beq_nat def
R637:637 Tactics <> n var
prf 740:752 <> rev_exercise1
R771:774 Poly <> list ind
R776:778 Coq.Init.Datatypes <> nat ind
R794:797 Coq.Init.Logic <> :type_scope:x_'->'_x not
R800:802 Coq.Init.Logic <> :type_scope:x_'='_x not
R798:799 Tactics <> l' var
R803:805 Poly <> rev def
R807:807 Tactics <> l var
R785:787 Coq.Init.Logic <> :type_scope:x_'='_x not
R784:784 Tactics <> l var
R788:790 Poly <> rev def
R792:793 Tactics <> l' var
R861:874 Poly <> rev_involutive thm
R861:874 Poly <> rev_involutive thm
def 891:906 <> trans_eq_example
R932:934 Coq.Init.Datatypes <> nat ind
R953:956 Coq.Init.Logic <> :type_scope:x_'->'_x not
R970:973 Coq.Init.Logic <> :type_scope:x_'->'_x not
R979:981 Coq.Init.Logic <> :type_scope:x_'='_x not
R974:974 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R976:976 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R978:978 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R975:975 Tactics <> a var
R977:977 Tactics <> b var
R982:982 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R984:984 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R986:986 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R983:983 Tactics <> e var
R985:985 Tactics <> f var
R962:964 Coq.Init.Logic <> :type_scope:x_'='_x not
R957:957 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R959:959 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R961:961 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R958:958 Tactics <> c var
R960:960 Tactics <> d var
R965:965 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R967:967 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R969:969 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R966:966 Tactics <> e var
R968:968 Tactics <> f var
R945:947 Coq.Init.Logic <> :type_scope:x_'='_x not
R940:940 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R942:942 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R944:944 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R941:941 Tactics <> a var
R943:943 Tactics <> b var
R948:948 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R950:950 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R952:952 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R949:949 Tactics <> c var
R951:951 Tactics <> d var
prf 1076:1083 <> trans_eq
R1114:1114 Tactics <> X var
R1125:1128 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1134:1137 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1139:1141 Coq.Init.Logic <> :type_scope:x_'='_x not
R1138:1138 Tactics <> n var
R1142:1142 Tactics <> o var
R1130:1132 Coq.Init.Logic <> :type_scope:x_'='_x not
R1129:1129 Tactics <> m var
R1133:1133 Tactics <> o var
R1121:1123 Coq.Init.Logic <> :type_scope:x_'='_x not
R1120:1120 Tactics <> n var
R1124:1124 Tactics <> m var
def 1228:1244 <> trans_eq_example'
R1270:1272 Coq.Init.Datatypes <> nat ind
R1291:1294 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1308:1311 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1317:1319 Coq.Init.Logic <> :type_scope:x_'='_x not
R1312:1312 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1314:1314 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1316:1316 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1313:1313 Tactics <> a var
R1315:1315 Tactics <> b var
R1320:1320 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1322:1322 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1324:1324 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1321:1321 Tactics <> e var
R1323:1323 Tactics <> f var
R1300:1302 Coq.Init.Logic <> :type_scope:x_'='_x not
R1295:1295 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1297:1297 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1299:1299 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1296:1296 Tactics <> c var
R1298:1298 Tactics <> d var
R1303:1303 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1305:1305 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1307:1307 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1304:1304 Tactics <> e var
R1306:1306 Tactics <> f var
R1283:1285 Coq.Init.Logic <> :type_scope:x_'='_x not
R1278:1278 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1280:1280 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1282:1282 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1279:1279 Tactics <> a var
R1281:1281 Tactics <> b var
R1286:1286 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1288:1288 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1290:1290 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1287:1287 Tactics <> c var
R1289:1289 Tactics <> d var
R1390:1390 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1392:1392 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1394:1394 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1372:1379 Tactics <> trans_eq thm
R1390:1390 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1392:1392 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1394:1394 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1372:1379 Tactics <> trans_eq thm
def 1443:1459 <> trans_eq_exercise
R1481:1483 Coq.Init.Datatypes <> nat ind
R1505:1508 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1520:1523 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1524:1524 Coq.Init.Logic <> :type_scope:x_'='_x not
R1530:1534 Coq.Init.Logic <> :type_scope:x_'='_x not
R1545:1545 Coq.Init.Logic <> :type_scope:x_'='_x not
R1526:1528 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R1525:1525 Tactics <> n var
R1529:1529 Tactics <> p var
R1535:1542 Basics <> minustwo def
R1544:1544 Tactics <> o var
R1509:1509 Coq.Init.Logic <> :type_scope:x_'='_x not
R1515:1518 Coq.Init.Logic <> :type_scope:x_'='_x not
R1511:1513 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R1510:1510 Tactics <> n var
R1514:1514 Tactics <> p var
R1519:1519 Tactics <> m var
R1490:1493 Coq.Init.Logic <> :type_scope:x_'='_x not
R1504:1504 Coq.Init.Logic <> :type_scope:x_'='_x not
R1489:1489 Tactics <> m var
R1494:1501 Basics <> minustwo def
R1503:1503 Tactics <> o var
R1589:1596 Tactics <> trans_eq thm
R1589:1596 Tactics <> trans_eq thm
prf 1632:1642 <> S_injective
R1660:1662 Coq.Init.Datatypes <> nat ind
R1678:1681 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1683:1685 Coq.Init.Logic <> :type_scope:x_'='_x not
R1682:1682 Tactics <> n var
R1686:1686 Tactics <> m var
R1672:1674 Coq.Init.Logic <> :type_scope:x_'='_x not
R1669:1669 Coq.Init.Datatypes <> S constr
R1671:1671 Tactics <> n var
R1675:1675 Coq.Init.Datatypes <> S constr
R1677:1677 Tactics <> m var
prf 1750:1762 <> inversion_ex1
R1782:1784 Coq.Init.Datatypes <> nat ind
R1804:1807 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1811:1813 Coq.Init.Logic <> :type_scope:x_'='_x not
R1808:1808 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1810:1810 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1809:1809 Tactics <> n var
R1814:1814 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1816:1816 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1815:1815 Tactics <> m var
R1796:1798 Coq.Init.Logic <> :type_scope:x_'='_x not
R1791:1791 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1793:1793 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1795:1795 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1792:1792 Tactics <> n var
R1794:1794 Tactics <> m var
R1799:1799 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1801:1801 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1803:1803 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1800:1800 Tactics <> o var
R1802:1802 Tactics <> o var
prf 1882:1894 <> inversion_ex2
R1912:1914 Coq.Init.Datatypes <> nat ind
R1929:1932 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1934:1936 Coq.Init.Logic <> :type_scope:x_'='_x not
R1933:1933 Tactics <> n var
R1937:1937 Tactics <> m var
R1923:1925 Coq.Init.Logic <> :type_scope:x_'='_x not
R1920:1920 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1922:1922 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1921:1921 Tactics <> n var
R1926:1926 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1928:1928 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1927:1927 Tactics <> m var
def 2010:2022 <> inversion_ex3
R2053:2053 Tactics <> X var
R2063:2066 Poly <> list ind
R2068:2068 Tactics <> X var
R2094:2099 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2115:2120 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2122:2124 Coq.Init.Logic <> :type_scope:x_'='_x not
R2121:2121 Tactics <> x var
R2125:2125 Tactics <> y var
R2106:2108 Coq.Init.Logic <> :type_scope:x_'='_x not
R2101:2104 Poly <> ::x_'::'_x not
R2100:2100 Tactics <> y var
R2105:2105 Tactics <> l var
R2110:2113 Poly <> ::x_'::'_x not
R2109:2109 Tactics <> x var
R2114:2114 Tactics <> j var
R2085:2087 Coq.Init.Logic <> :type_scope:x_'='_x not
R2075:2078 Poly <> ::x_'::'_x not
R2074:2074 Tactics <> x var
R2080:2083 Poly <> ::x_'::'_x not
R2079:2079 Tactics <> y var
R2084:2084 Tactics <> l var
R2089:2092 Poly <> ::x_'::'_x not
R2088:2088 Tactics <> z var
R2093:2093 Tactics <> j var
prf 2254:2264 <> beq_nat_0_l
R2299:2302 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2304:2306 Coq.Init.Logic <> :type_scope:x_'='_x not
R2303:2303 Tactics <> n var
R2292:2294 Coq.Init.Logic <> :type_scope:x_'='_x not
R2281:2287 Basics <> beq_nat def
R2291:2291 Tactics <> n var
R2295:2298 Basics <> true constr
prf 2401:2413 <> inversion_ex4
R2429:2431 Coq.Init.Datatypes <> nat ind
R2443:2446 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2452:2454 Coq.Init.Logic <> :type_scope:x_'='_x not
R2448:2450 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R2439:2441 Coq.Init.Logic <> :type_scope:x_'='_x not
R2436:2436 Coq.Init.Datatypes <> S constr
R2438:2438 Tactics <> n var
prf 2506:2518 <> inversion_ex5
R2536:2538 Coq.Init.Datatypes <> nat ind
R2556:2559 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2563:2565 Coq.Init.Logic <> :type_scope:x_'='_x not
R2560:2560 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2562:2562 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2561:2561 Tactics <> n var
R2566:2566 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2568:2568 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2567:2567 Tactics <> m var
R2549:2551 Coq.Init.Logic <> :type_scope:x_'='_x not
R2544:2548 Basics <> false constr
R2552:2555 Basics <> true constr
def 2619:2631 <> inversion_ex6
R2664:2664 Tactics <> X var
R2674:2677 Poly <> list ind
R2679:2679 Tactics <> X var
R2701:2706 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2722:2725 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2727:2729 Coq.Init.Logic <> :type_scope:x_'='_x not
R2726:2726 Tactics <> x var
R2730:2730 Tactics <> z var
R2713:2715 Coq.Init.Logic <> :type_scope:x_'='_x not
R2708:2711 Poly <> ::x_'::'_x not
R2707:2707 Tactics <> y var
R2712:2712 Tactics <> l var
R2717:2720 Poly <> ::x_'::'_x not
R2716:2716 Tactics <> z var
R2721:2721 Tactics <> j var
R2696:2698 Coq.Init.Logic <> :type_scope:x_'='_x not
R2686:2689 Poly <> ::x_'::'_x not
R2685:2685 Tactics <> x var
R2691:2694 Poly <> ::x_'::'_x not
R2690:2690 Tactics <> y var
R2695:2695 Tactics <> l var
R2699:2700 Poly <> ::'['_']' not
prf 2789:2795 <> f_equal
R2825:2828 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2829:2829 Tactics <> B var
R2824:2824 Tactics <> A var
R2839:2839 Tactics <> A var
R2849:2852 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2856:2858 Coq.Init.Logic <> :type_scope:x_'='_x not
R2853:2853 Tactics <> f var
R2855:2855 Tactics <> x var
R2859:2859 Tactics <> f var
R2861:2861 Tactics <> y var
R2845:2847 Coq.Init.Logic <> :type_scope:x_'='_x not
R2844:2844 Tactics <> x var
R2848:2848 Tactics <> y var
prf 2933:2943 <> S_equal_rev
R2961:2963 Coq.Init.Datatypes <> nat ind
R2978:2981 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2983:2985 Coq.Init.Logic <> :type_scope:x_'='_x not
R2982:2982 Tactics <> n var
R2986:2986 Tactics <> m var
R2972:2974 Coq.Init.Logic <> :type_scope:x_'='_x not
R2969:2969 Coq.Init.Datatypes <> S constr
R2971:2971 Tactics <> n var
R2975:2975 Coq.Init.Datatypes <> S constr
R2977:2977 Tactics <> m var
prf 3050:3054 <> S_inj
R3072:3074 Coq.Init.Datatypes <> nat ind
R3082:3085 Basics <> bool ind
R3114:3117 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3129:3131 Coq.Init.Logic <> :type_scope:x_'='_x not
R3118:3124 Basics <> beq_nat def
R3128:3128 Tactics <> m var
R3126:3126 Tactics <> n var
R3132:3132 Tactics <> b var
R3110:3112 Coq.Init.Logic <> :type_scope:x_'='_x not
R3091:3097 Basics <> beq_nat def
R3106:3106 Coq.Init.Datatypes <> S constr
R3108:3108 Tactics <> m var
R3100:3100 Coq.Init.Datatypes <> S constr
R3102:3102 Tactics <> n var
R3113:3113 Tactics <> b var
prf 3193:3199 <> silly3'
R3215:3217 Coq.Init.Datatypes <> nat ind
R3223:3223 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3272:3278 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3297:3302 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3307:3309 Coq.Init.Logic <> :type_scope:x_'='_x not
R3303:3306 Basics <> true constr
R3310:3316 Basics <> beq_nat def
R3319:3319 Coq.Init.Datatypes <> S constr
R3322:3322 Coq.Init.Datatypes <> S constr
R3324:3324 Tactics <> n var
R3283:3285 Coq.Init.Logic <> :type_scope:x_'='_x not
R3279:3282 Basics <> true constr
R3286:3292 Basics <> beq_nat def
R3294:3294 Tactics <> n var
R3242:3245 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3265:3267 Coq.Init.Logic <> :type_scope:x_'='_x not
R3246:3252 Basics <> beq_nat def
R3255:3255 Coq.Init.Datatypes <> S constr
R3258:3258 Coq.Init.Datatypes <> S constr
R3260:3260 Tactics <> n var
R3268:3271 Basics <> true constr
R3235:3237 Coq.Init.Logic <> :type_scope:x_'='_x not
R3224:3230 Basics <> beq_nat def
R3232:3232 Tactics <> n var
R3238:3241 Basics <> true constr
prf 3434:3451 <> plus_n_n_injective
R3483:3486 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3488:3490 Coq.Init.Logic <> :type_scope:x_'='_x not
R3487:3487 Tactics <> n var
R3491:3491 Tactics <> m var
R3475:3477 Coq.Init.Logic <> :type_scope:x_'='_x not
R3471:3473 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R3470:3470 Tactics <> n var
R3474:3474 Tactics <> n var
R3479:3481 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R3478:3478 Tactics <> m var
R3482:3482 Tactics <> m var
R3679:3687 Induction <> plus_n_Sm thm
R3679:3687 Induction <> plus_n_Sm thm
R3679:3687 Induction <> plus_n_Sm thm
R3719:3721 Coq.Init.Datatypes <> nat ind
R3731:3734 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3742:3744 Coq.Init.Logic <> :type_scope:x_'='_x not
R3737:3739 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R3746:3748 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R3745:3745 Tactics <> p var
R3749:3749 Tactics <> p var
R3727:3729 Coq.Init.Logic <> :type_scope:x_'='_x not
R3724:3724 Coq.Init.Datatypes <> S constr
R3726:3726 Tactics <> p var
R3719:3721 Coq.Init.Datatypes <> nat ind
R3731:3734 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3742:3744 Coq.Init.Logic <> :type_scope:x_'='_x not
R3737:3739 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R3746:3748 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R3745:3745 Tactics <> p var
R3749:3749 Tactics <> p var
R3727:3729 Coq.Init.Logic <> :type_scope:x_'='_x not
R3724:3724 Coq.Init.Datatypes <> S constr
R3726:3726 Tactics <> p var
R3817:3825 Induction <> plus_n_Sm thm
R3817:3825 Induction <> plus_n_Sm thm
R3817:3825 Induction <> plus_n_Sm thm
R3970:3978 Induction <> plus_n_Sm thm
R3970:3978 Induction <> plus_n_Sm thm
R3970:3978 Induction <> plus_n_Sm thm
R3997:4007 Tactics <> S_equal_rev thm
R3997:4007 Tactics <> S_equal_rev thm
R4021:4031 Tactics <> S_equal_rev thm
R4021:4031 Tactics <> S_equal_rev thm
R4066:4072 Tactics <> f_equal thm
R4066:4072 Tactics <> f_equal thm
prf 4102:4117 <> double_injective
R4154:4157 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4159:4161 Coq.Init.Logic <> :type_scope:x_'='_x not
R4158:4158 Tactics <> n var
R4162:4162 Tactics <> m var
R4143:4145 Coq.Init.Logic <> :type_scope:x_'='_x not
R4135:4140 Induction <> double def
R4142:4142 Tactics <> n var
R4146:4151 Induction <> double def
R4153:4153 Tactics <> m var
R4384:4390 Tactics <> f_equal thm
R4384:4390 Tactics <> f_equal thm
prf 4462:4473 <> beq_nat_true
R4509:4512 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4514:4516 Coq.Init.Logic <> :type_scope:x_'='_x not
R4513:4513 Tactics <> n var
R4517:4517 Tactics <> m var
R4502:4504 Coq.Init.Logic <> :type_scope:x_'='_x not
R4491:4497 Basics <> beq_nat def
R4501:4501 Tactics <> m var
R4499:4499 Tactics <> n var
R4505:4508 Basics <> true constr
R4714:4720 Tactics <> f_equal thm
R4714:4720 Tactics <> f_equal thm
prf 4781:4802 <> double_injective_take2
R4842:4850 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4852:4854 Coq.Init.Logic <> :type_scope:x_'='_x not
R4851:4851 Tactics <> n var
R4855:4855 Tactics <> m var
R4831:4833 Coq.Init.Logic <> :type_scope:x_'='_x not
R4823:4828 Induction <> double def
R4830:4830 Tactics <> n var
R4834:4839 Induction <> double def
R4841:4841 Tactics <> m var
R5095:5101 Tactics <> f_equal thm
R5095:5101 Tactics <> f_equal thm
prf 5157:5167 <> beq_id_true
R5203:5206 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5208:5210 Coq.Init.Logic <> :type_scope:x_'='_x not
R5207:5207 Tactics <> x var
R5211:5211 Tactics <> y var
R5196:5198 Coq.Init.Logic <> :type_scope:x_'='_x not
R5186:5191 Lists <> beq_id def
R5195:5195 Tactics <> y var
R5193:5193 Tactics <> x var
R5199:5202 Basics <> true constr
R5273:5275 Coq.Init.Logic <> :type_scope:x_'='_x not
R5273:5275 Coq.Init.Logic <> :type_scope:x_'='_x not
R5289:5300 Tactics <> beq_nat_true thm
R5289:5300 Tactics <> beq_nat_true thm
prf 5348:5367 <> nth_error_after_last
R5383:5385 Coq.Init.Datatypes <> nat ind
R5404:5407 Poly <> list ind
R5409:5409 Tactics <> X var
R5427:5430 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5444:5446 Coq.Init.Logic <> :type_scope:x_'='_x not
R5431:5439 Poly <> nth_error def
R5443:5443 Tactics <> n var
R5441:5441 Tactics <> l var
R5447:5450 Poly <> None constr
R5423:5425 Coq.Init.Logic <> :type_scope:x_'='_x not
R5415:5420 Poly <> length def
R5422:5422 Tactics <> l var
R5426:5426 Tactics <> n var
def 5744:5749 <> square
R5757:5759 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R5756:5756 Tactics <> n var
R5760:5760 Tactics <> n var
