DIGEST 4f635a1de0e8afd59f55e5477086d77d
FPoly
R66:70 Lists <> <> lib
ind 84:91 <> boollist
constr 105:112 <> bool_nil
constr 127:135 <> bool_cons
R116:123 Poly <> boollist ind
R143:146 Coq.Init.Logic <> :type_scope:x_'->'_x not
R155:158 Coq.Init.Logic <> :type_scope:x_'->'_x not
R159:166 Poly <> boollist ind
R147:154 Poly <> boollist ind
R139:142 Basics <> bool ind
ind 180:183 <> list
constr 208:210 <> nil
constr 223:226 <> cons
R214:217 Poly <> list ind
R219:219 Poly <> X var
R231:234 Coq.Init.Logic <> :type_scope:x_'->'_x not
R241:244 Coq.Init.Logic <> :type_scope:x_'->'_x not
R245:248 Poly <> list ind
R250:250 Poly <> X var
R235:238 Poly <> list ind
R240:240 Poly <> X var
R230:230 Poly <> X var
R260:263 Poly <> list ind
R273:275 Poly <> nil constr
R277:279 Coq.Init.Datatypes <> nat ind
R290:293 Poly <> cons constr
R302:304 Poly <> nil constr
R306:308 Coq.Init.Datatypes <> nat ind
R295:297 Coq.Init.Datatypes <> nat ind
R319:321 Poly <> nil constr
R330:333 Poly <> cons constr
def 346:351 <> repeat
R369:369 Poly <> X var
R381:383 Coq.Init.Datatypes <> nat ind
R388:391 Poly <> list ind
R393:393 Poly <> X var
R406:410 Poly <> count var
R426:428 Poly <> nil constr
R430:430 Poly <> X var
R436:436 Coq.Init.Datatypes <> S constr
R449:452 Poly <> cons constr
R459:464 Poly <> repeat def
R468:468 Poly <> x var
R466:466 Poly <> X var
R456:456 Poly <> x var
R454:454 Poly <> X var
def 495:506 <> test_repeat1
R527:529 Coq.Init.Logic <> :type_scope:x_'='_x not
R513:518 Poly <> repeat def
R520:522 Coq.Init.Datatypes <> nat ind
R530:533 Poly <> cons constr
R542:545 Poly <> cons constr
R554:556 Poly <> nil constr
R558:560 Coq.Init.Datatypes <> nat ind
R547:549 Coq.Init.Datatypes <> nat ind
R535:537 Coq.Init.Datatypes <> nat ind
def 599:610 <> test_repeat2
R636:638 Coq.Init.Logic <> :type_scope:x_'='_x not
R617:622 Poly <> repeat def
R629:633 Basics <> false constr
R624:627 Basics <> bool ind
R639:642 Poly <> cons constr
R656:658 Poly <> nil constr
R660:663 Basics <> bool ind
R649:653 Basics <> false constr
R644:647 Basics <> bool ind
mod 700:712 <> MumbleGrumble
ind 726:731 MumbleGrumble mumble
constr 747:747 MumbleGrumble a
constr 762:762 MumbleGrumble b
constr 794:794 MumbleGrumble c
R751:756 Poly <> mumble ind
R772:775 Coq.Init.Logic <> :type_scope:x_'->'_x not
R779:782 Coq.Init.Logic <> :type_scope:x_'->'_x not
R783:788 Poly <> mumble ind
R776:778 Coq.Init.Datatypes <> nat ind
R766:771 Poly <> mumble ind
R798:803 Poly <> mumble ind
ind 817:823 MumbleGrumble grumble
constr 850:850 MumbleGrumble d
constr 878:878 MumbleGrumble e
R860:863 Coq.Init.Logic <> :type_scope:x_'->'_x not
R864:870 Poly <> grumble ind
R872:872 Poly <> X var
R854:859 Poly MumbleGrumble mumble ind
R883:886 Coq.Init.Logic <> :type_scope:x_'->'_x not
R887:893 Poly <> grumble ind
R895:895 Poly <> X var
R882:882 Poly <> X var
R905:905 Poly MumbleGrumble b constr
R907:907 Poly MumbleGrumble a constr
R931:931 Poly MumbleGrumble d constr
R1048:1048 Poly MumbleGrumble d constr
R1058:1058 Poly MumbleGrumble b constr
R1060:1060 Poly MumbleGrumble a constr
R1050:1055 Poly MumbleGrumble mumble ind
R1093:1093 Poly MumbleGrumble d constr
R1101:1101 Poly MumbleGrumble b constr
R1103:1103 Poly MumbleGrumble a constr
R1095:1098 Basics <> bool ind
R1134:1134 Poly MumbleGrumble e constr
R1141:1144 Basics <> true constr
R1136:1139 Basics <> bool ind
R1172:1172 Poly MumbleGrumble b constr
R1174:1174 Poly MumbleGrumble c constr
R1198:1198 Poly MumbleGrumble e constr
R1208:1208 Poly MumbleGrumble b constr
R1210:1210 Poly MumbleGrumble c constr
R1200:1205 Poly MumbleGrumble mumble ind
R1299:1299 Poly MumbleGrumble c constr
R1320:1332 Poly MumbleGrumble <> mod
def 1345:1351 <> repeat'
R1365:1368 Poly <> list ind
R1370:1370 Poly <> X var
R1383:1387 Poly <> count var
R1403:1405 Poly <> nil constr
R1407:1407 Poly <> X var
R1413:1413 Coq.Init.Datatypes <> S constr
R1425:1428 Poly <> cons constr
R1435:1441 Poly <> repeat' def
R1445:1445 Poly <> x var
R1443:1443 Poly <> X var
R1432:1432 Poly <> x var
R1430:1430 Poly <> X var
R1469:1475 Poly <> repeat' def
R1526:1531 Poly <> repeat def
def 1563:1570 <> list123'
R1577:1580 Poly <> cons constr
R1588:1591 Poly <> cons constr
R1599:1602 Poly <> cons constr
R1609:1611 Poly <> nil constr
R1630:1632 Poly <> nil constr
R1630:1632 Poly <> nil constr
R1649:1652 Poly <> cons constr
R1649:1652 Poly <> cons constr
R1673:1678 Poly <> repeat def
R1673:1678 Poly <> repeat def
def 1705:1713 <> list123''
R1718:1721 Poly <> cons constr
R1726:1729 Poly <> cons constr
R1734:1737 Poly <> cons constr
R1741:1743 Poly <> nil constr
def 1758:1766 <> repeat'''
R1784:1784 Poly <> X var
R1796:1798 Coq.Init.Datatypes <> nat ind
R1803:1806 Poly <> list ind
R1808:1808 Poly <> X var
R1821:1825 Poly <> count var
R1842:1844 Poly <> nil constr
R1850:1850 Coq.Init.Datatypes <> S constr
R1862:1865 Poly <> cons constr
R1870:1878 Poly <> repeat''' def
R1880:1880 Poly <> x var
R1867:1867 Poly <> x var
ind 1963:1967 <> list'
constr 1994:1997 <> nil'
constr 2011:2015 <> cons'
R2001:2005 Poly <> list' ind
R2001:2005 Poly <> X var
R2020:2023 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2029:2032 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2033:2037 Poly <> list' ind
R2033:2037 Poly <> X var
R2024:2028 Poly <> list' ind
R2024:2028 Poly <> X var
R2019:2019 Poly <> X var
def 2125:2127 <> app
R2149:2152 Poly <> list ind
R2154:2154 Poly <> X var
R2159:2162 Poly <> list ind
R2164:2164 Poly <> X var
R2177:2178 Poly <> l1 var
R2189:2191 Poly <> nil constr
R2196:2197 Poly <> l2 var
R2203:2206 Poly <> cons constr
R2215:2218 Poly <> cons constr
R2223:2225 Poly <> app def
R2229:2230 Poly <> l2 var
def 2250:2252 <> rev
R2270:2273 Poly <> list ind
R2275:2275 Poly <> X var
R2280:2283 Poly <> list ind
R2285:2285 Poly <> X var
R2298:2298 Poly <> l var
R2309:2311 Poly <> nil constr
R2316:2318 Poly <> nil constr
R2324:2327 Poly <> cons constr
R2336:2338 Poly <> app def
R2349:2352 Poly <> cons constr
R2356:2358 Poly <> nil constr
R2341:2343 Poly <> rev def
def 2378:2383 <> length
R2401:2404 Poly <> list ind
R2406:2406 Poly <> X var
R2411:2413 Coq.Init.Datatypes <> nat ind
R2426:2426 Poly <> l var
R2437:2439 Poly <> nil constr
R2450:2453 Poly <> cons constr
R2462:2462 Coq.Init.Datatypes <> S constr
R2465:2470 Poly <> length def
def 2491:2499 <> test_rev1
R2530:2532 Coq.Init.Logic <> :type_scope:x_'='_x not
R2505:2507 Poly <> rev def
R2510:2513 Poly <> cons constr
R2518:2521 Poly <> cons constr
R2525:2527 Poly <> nil constr
R2533:2536 Poly <> cons constr
R2541:2544 Poly <> cons constr
R2548:2550 Poly <> nil constr
def 2588:2596 <> test_rev2
R2620:2622 Coq.Init.Logic <> :type_scope:x_'='_x not
R2601:2603 Poly <> rev def
R2606:2609 Poly <> cons constr
R2616:2618 Poly <> nil constr
R2611:2614 Basics <> true constr
R2623:2626 Poly <> cons constr
R2633:2635 Poly <> nil constr
R2628:2631 Basics <> true constr
def 2672:2683 <> test_length1
R2723:2725 Coq.Init.Logic <> :type_scope:x_'='_x not
R2686:2691 Poly <> length def
R2694:2697 Poly <> cons constr
R2702:2705 Poly <> cons constr
R2710:2713 Poly <> cons constr
R2717:2719 Poly <> nil constr
def 2771:2775 <> mynil
R2780:2782 Poly <> nil constr
def 2825:2829 <> mynil
R2833:2836 Poly <> list ind
R2838:2840 Coq.Init.Datatypes <> nat ind
R2845:2847 Poly <> nil constr
R2875:2877 Poly <> nil constr
def 2925:2930 <> mynil'
R2936:2938 Poly <> nil constr
R2940:2942 Coq.Init.Datatypes <> nat ind
R2968:2971 Poly <> cons constr
not 2955:2955 <> ::x_'::'_x
R3055:3057 Poly <> nil constr
not 3046:3046 <> ::'['_']'
R3090:3093 Poly <> cons constr
R3101:3104 Poly <> cons constr
R3108:3109 Poly <> ::'['_']' not
not 3069:3069 <> ::'['_x_';'_'..'_';'_x_']'
R3139:3141 Poly <> app def
not 3126:3126 <> ::x_'++'_x
def 3218:3227 <> list123'''
R3232:3232 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R3234:3234 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R3236:3236 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R3238:3238 Poly <> ::'['_x_';'_'..'_';'_x_']' not
prf 3250:3258 <> app_assoc
R3302:3305 Poly <> list ind
R3307:3307 Poly <> X var
R3330:3332 Coq.Init.Logic <> :type_scope:x_'='_x not
R3314:3314 Poly <> ::x_'++'_x not
R3323:3327 Poly <> ::x_'++'_x not
R3317:3320 Poly <> ::x_'++'_x not
R3315:3316 Poly <> l1 var
R3321:3322 Poly <> l2 var
R3328:3329 Poly <> l3 var
R3335:3339 Poly <> ::x_'++'_x not
R3348:3348 Poly <> ::x_'++'_x not
R3333:3334 Poly <> l1 var
R3342:3345 Poly <> ::x_'++'_x not
R3340:3341 Poly <> l2 var
R3346:3347 Poly <> l3 var
prf 3487:3495 <> app_nil_r
R3531:3534 Poly <> list ind
R3536:3536 Poly <> X var
R3546:3548 Coq.Init.Logic <> :type_scope:x_'='_x not
R3540:3543 Poly <> ::x_'++'_x not
R3539:3539 Poly <> l var
R3544:3545 Poly <> ::'['_']' not
R3549:3549 Poly <> l var
prf 3676:3685 <> app_length
R3716:3719 Poly <> list ind
R3721:3721 Poly <> X var
R3744:3746 Coq.Init.Logic <> :type_scope:x_'='_x not
R3727:3732 Poly <> length def
R3737:3740 Poly <> ::x_'++'_x not
R3735:3736 Poly <> l1 var
R3741:3742 Poly <> l2 var
R3756:3758 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R3747:3752 Poly <> length def
R3754:3755 Poly <> l1 var
R3759:3764 Poly <> length def
R3766:3767 Poly <> l2 var
prf 3903:3915 <> rev_app_distr
R3937:3940 Poly <> list ind
R3942:3942 Poly <> X var
R3962:3964 Coq.Init.Logic <> :type_scope:x_'='_x not
R3948:3950 Poly <> rev def
R3955:3958 Poly <> ::x_'++'_x not
R3953:3954 Poly <> l1 var
R3959:3960 Poly <> l2 var
R3971:3974 Poly <> ::x_'++'_x not
R3965:3967 Poly <> rev def
R3969:3970 Poly <> l2 var
R3975:3977 Poly <> rev def
R3979:3980 Poly <> l1 var
R4065:4073 Poly <> app_nil_r thm
R4065:4073 Poly <> app_nil_r thm
R4065:4073 Poly <> app_nil_r thm
R4111:4119 Poly <> app_assoc thm
R4111:4119 Poly <> app_assoc thm
R4111:4119 Poly <> app_assoc thm
prf 4156:4169 <> rev_involutive
R4201:4204 Poly <> list ind
R4206:4206 Poly <> X var
R4222:4224 Coq.Init.Logic <> :type_scope:x_'='_x not
R4211:4213 Poly <> rev def
R4216:4218 Poly <> rev def
R4220:4220 Poly <> l var
R4225:4225 Poly <> l var
R4320:4332 Poly <> rev_app_distr thm
R4320:4332 Poly <> rev_app_distr thm
R4320:4332 Poly <> rev_app_distr thm
ind 4370:4373 <> prod
constr 4400:4403 <> pair
R4407:4410 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4412:4415 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4416:4419 Poly <> prod ind
R4423:4423 Poly <> Y var
R4421:4421 Poly <> X var
R4411:4411 Poly <> Y var
R4406:4406 Poly <> X var
R4437:4440 Poly <> pair constr
R4437:4440 Poly <> pair constr
R4480:4483 Poly <> pair constr
not 4464:4464 <> ::'('_x_','_x_')'
R4539:4542 Poly <> prod ind
not 4527:4527 <> :type_scope:x_'*'_x
def 4591:4593 <> fst
R4614:4616 Poly <> :type_scope:x_'*'_x not
R4613:4613 Poly <> X var
R4617:4617 Poly <> Y var
R4622:4622 Poly <> X var
R4635:4635 Poly <> p var
R4646:4646 Poly <> ::'('_x_','_x_')' not
R4648:4648 Poly <> ::'('_x_','_x_')' not
R4650:4650 Poly <> ::'('_x_','_x_')' not
def 4676:4678 <> snd
R4699:4701 Poly <> :type_scope:x_'*'_x not
R4698:4698 Poly <> X var
R4702:4702 Poly <> Y var
R4707:4707 Poly <> Y var
R4720:4720 Poly <> p var
R4732:4732 Poly <> ::'('_x_','_x_')' not
R4734:4734 Poly <> ::'('_x_','_x_')' not
R4736:4736 Poly <> ::'('_x_','_x_')' not
def 4760:4766 <> combine
R4787:4790 Poly <> list ind
R4792:4792 Poly <> X var
R4801:4804 Poly <> list ind
R4806:4806 Poly <> Y var
R4811:4814 Poly <> list ind
R4818:4818 Poly <> :type_scope:x_'*'_x not
R4817:4817 Poly <> X var
R4819:4819 Poly <> Y var
R4836:4837 Poly <> l2 var
R4833:4834 Poly <> l1 var
R4848:4849 Poly <> ::'['_']' not
R4856:4857 Poly <> ::'['_']' not
R4865:4866 Poly <> ::'['_']' not
R4871:4872 Poly <> ::'['_']' not
R4881:4882 Poly <> ::x_'::'_x not
R4889:4890 Poly <> ::x_'::'_x not
R4898:4901 Poly <> cons constr
R4912:4918 Poly <> combine def
R4903:4903 Poly <> ::'('_x_','_x_')' not
R4906:4906 Poly <> ::'('_x_','_x_')' not
R4909:4909 Poly <> ::'('_x_','_x_')' not
R4942:4948 Poly <> combine def
R5017:5023 Poly <> combine def
R5031:5031 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5037:5038 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5044:5045 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5050:5051 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5056:5056 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5032:5036 Basics <> false constr
R5039:5043 Basics <> false constr
R5046:5049 Basics <> true constr
R5052:5055 Basics <> true constr
R5025:5025 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5027:5027 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5029:5029 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 5070:5074 <> split
R5094:5097 Poly <> list ind
R5101:5101 Poly <> :type_scope:x_'*'_x not
R5100:5100 Poly <> X var
R5102:5102 Poly <> Y var
R5108:5108 Poly <> :type_scope:x_'*'_x not
R5115:5117 Poly <> :type_scope:x_'*'_x not
R5124:5124 Poly <> :type_scope:x_'*'_x not
R5109:5112 Poly <> list ind
R5114:5114 Poly <> X var
R5118:5121 Poly <> list ind
R5123:5123 Poly <> Y var
R5137:5137 Poly <> l var
R5148:5149 Poly <> ::'['_']' not
R5154:5154 Poly <> ::'('_x_','_x_')' not
R5157:5157 Poly <> ::'('_x_','_x_')' not
R5160:5160 Poly <> ::'('_x_','_x_')' not
R5155:5156 Poly <> ::'['_']' not
R5158:5159 Poly <> ::'['_']' not
R5167:5168 Poly <> ::x_'::'_x not
R5174:5175 Poly <> ::'('_x_','_x_')' not
R5200:5201 Poly <> ::'('_x_','_x_')' not
R5226:5227 Poly <> ::'('_x_','_x_')' not
R5176:5176 Poly <> ::x_'::'_x not
R5182:5185 Poly <> ::x_'::'_x not
R5199:5199 Poly <> ::x_'::'_x not
R5177:5179 Poly <> fst def
R5186:5188 Poly <> fst def
R5191:5195 Poly <> split def
R5202:5202 Poly <> ::x_'::'_x not
R5208:5211 Poly <> ::x_'::'_x not
R5225:5225 Poly <> ::x_'::'_x not
R5203:5205 Poly <> snd def
R5212:5214 Poly <> snd def
R5217:5221 Poly <> split def
def 5245:5254 <> test_split
R5286:5288 Coq.Init.Logic <> :type_scope:x_'='_x not
R5259:5263 Poly <> split def
R5265:5265 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5275:5275 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5285:5285 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5266:5266 Poly <> ::'('_x_','_x_')' not
R5268:5268 Poly <> ::'('_x_','_x_')' not
R5274:5274 Poly <> ::'('_x_','_x_')' not
R5269:5273 Basics <> false constr
R5276:5276 Poly <> ::'('_x_','_x_')' not
R5278:5278 Poly <> ::'('_x_','_x_')' not
R5284:5284 Poly <> ::'('_x_','_x_')' not
R5279:5283 Basics <> false constr
R5289:5289 Poly <> ::'('_x_','_x_')' not
R5295:5295 Poly <> ::'('_x_','_x_')' not
R5309:5309 Poly <> ::'('_x_','_x_')' not
R5290:5290 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5292:5292 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5294:5294 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5296:5296 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5302:5302 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5308:5308 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5297:5301 Basics <> false constr
R5303:5307 Basics <> false constr
ind 5348:5353 <> option
constr 5381:5384 <> Some
constr 5406:5409 <> None
R5389:5392 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5393:5398 Poly <> option ind
R5400:5400 Poly <> X var
R5388:5388 Poly <> X var
R5413:5418 Poly <> option ind
R5420:5420 Poly <> X var
R5434:5437 Poly <> Some constr
R5434:5437 Poly <> Some constr
R5456:5459 Poly <> None constr
R5456:5459 Poly <> None constr
R5473:5479 Basics <> beq_nat def
def 5707:5715 <> nth_error
R5733:5736 Poly <> list ind
R5738:5738 Poly <> X var
R5746:5748 Coq.Init.Datatypes <> nat ind
R5753:5758 Poly <> option ind
R5760:5760 Poly <> X var
R5773:5773 Poly <> l var
R5785:5786 Poly <> ::'['_']' not
R5791:5794 Poly <> None constr
R5803:5804 Poly <> ::x_'::'_x not
R5814:5820 Basics <> beq_nat def
R5824:5824 Poly <> n var
R5844:5852 Poly <> nth_error def
R5857:5860 Coq.Init.Peano <> pred syndef
R5862:5862 Poly <> n var
R5832:5835 Poly <> Some constr
def 5881:5895 <> test_nth_error1
R5920:5922 Coq.Init.Logic <> :type_scope:x_'='_x not
R5899:5907 Poly <> nth_error def
R5909:5909 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5911:5911 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5913:5913 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5915:5915 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5917:5917 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5923:5926 Poly <> Some constr
def 5964:5978 <> test_nth_error2
R6003:6005 Coq.Init.Logic <> :type_scope:x_'='_x not
R5982:5990 Poly <> nth_error def
R5992:5992 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5996:5996 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R6000:6000 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5993:5993 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5995:5995 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5997:5997 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5999:5999 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R6006:6009 Poly <> Some constr
R6011:6011 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R6013:6013 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 6049:6063 <> test_nth_error3
R6085:6087 Coq.Init.Logic <> :type_scope:x_'='_x not
R6067:6075 Poly <> nth_error def
R6077:6077 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R6082:6082 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R6078:6081 Basics <> true constr
R6088:6091 Poly <> None constr
def 6131:6138 <> hd_error
R6156:6159 Poly <> list ind
R6161:6161 Poly <> X var
R6166:6171 Poly <> option ind
R6173:6173 Poly <> X var
R6186:6186 Poly <> l var
R6197:6198 Poly <> ::'['_']' not
R6203:6206 Poly <> None constr
R6213:6214 Poly <> ::x_'::'_x not
R6220:6223 Poly <> Some constr
R6242:6249 Poly <> hd_error def
def 6260:6273 <> test_hd_error1
R6291:6293 Coq.Init.Logic <> :type_scope:x_'='_x not
R6277:6284 Poly <> hd_error def
R6286:6286 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R6288:6288 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R6290:6290 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R6294:6297 Poly <> Some constr
def 6335:6348 <> test_hd_error2
R6370:6372 Coq.Init.Logic <> :type_scope:x_'='_x not
R6352:6359 Poly <> hd_error def
R6361:6361 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R6365:6365 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R6369:6369 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R6362:6362 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R6364:6364 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R6366:6366 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R6368:6368 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R6373:6376 Poly <> Some constr
R6378:6378 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R6380:6380 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 6420:6429 <> doit3times
R6446:6447 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6448:6448 Poly <> X var
R6445:6445 Poly <> X var
R6454:6454 Poly <> X var
R6459:6459 Poly <> X var
R6467:6467 Poly <> f var
R6470:6470 Poly <> f var
R6473:6473 Poly <> f var
R6475:6475 Poly <> n var
R6489:6498 Poly <> doit3times def
def 6510:6524 <> test_doit3times
R6548:6550 Coq.Init.Logic <> :type_scope:x_'='_x not
R6527:6536 Poly <> doit3times def
R6538:6545 Basics <> minustwo def
def 6588:6603 <> test_doit3times'
R6626:6628 Coq.Init.Logic <> :type_scope:x_'='_x not
R6606:6615 Poly <> doit3times def
R6622:6625 Basics <> true constr
R6617:6620 Basics <> negb def
R6629:6633 Basics <> false constr
def 6671:6676 <> filter
R6697:6698 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6699:6702 Basics <> bool ind
R6696:6696 Poly <> X var
R6710:6713 Poly <> list ind
R6715:6715 Poly <> X var
R6720:6723 Poly <> list ind
R6725:6725 Poly <> X var
R6738:6738 Poly <> l var
R6749:6750 Poly <> ::'['_']' not
R6755:6756 Poly <> ::'['_']' not
R6763:6766 Poly <> ::x_'::'_x not
R6776:6779 Poly <> test var
R6818:6823 Poly <> filter def
R6825:6828 Poly <> test var
R6791:6795 Poly <> ::x_'::'_x not
R6809:6809 Poly <> ::x_'::'_x not
R6796:6801 Poly <> filter def
R6803:6806 Poly <> test var
def 6849:6860 <> test_filter1
R6885:6887 Coq.Init.Logic <> :type_scope:x_'='_x not
R6863:6868 Poly <> filter def
R6876:6876 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R6878:6878 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R6880:6880 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R6882:6882 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R6884:6884 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R6870:6874 Basics <> evenb def
R6888:6888 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R6890:6890 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R6892:6892 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 6931:6941 <> length_is_1
R6959:6962 Poly <> list ind
R6964:6964 Poly <> X var
R6969:6972 Basics <> bool ind
R6979:6985 Basics <> beq_nat def
R6988:6993 Poly <> length def
R6995:6995 Poly <> l var
def 7009:7020 <> test_filter2
R7095:7099 Coq.Init.Logic <> :type_scope:x_'='_x not
R7027:7032 Poly <> filter def
R7057:7058 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7065:7066 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7070:7071 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7075:7076 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7084:7085 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7088:7089 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7093:7094 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7059:7059 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7061:7062 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7064:7064 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7067:7067 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7069:7069 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7072:7072 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7074:7074 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7077:7077 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7079:7079 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7081:7081 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7083:7083 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7086:7087 Poly <> ::'['_']' not
R7090:7090 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7092:7092 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7034:7044 Poly <> length_is_1 def
R7100:7101 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7105:7106 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7110:7111 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7115:7116 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7102:7102 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7104:7104 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7107:7107 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7109:7109 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7112:7112 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7114:7114 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 7156:7171 <> countoddmembers'
R7178:7181 Poly <> list ind
R7183:7185 Coq.Init.Datatypes <> nat ind
R7190:7192 Coq.Init.Datatypes <> nat ind
R7199:7204 Poly <> length def
R7207:7212 Poly <> filter def
R7219:7219 Poly <> l var
R7214:7217 Basics <> oddb def
def 7232:7253 <> test_countoddmembers'1
R7286:7288 Coq.Init.Logic <> :type_scope:x_'='_x not
R7256:7271 Poly <> countoddmembers' def
R7273:7273 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7275:7275 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7277:7277 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7279:7279 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7281:7281 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7283:7283 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7285:7285 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 7325:7346 <> test_countoddmembers'2
R7373:7375 Coq.Init.Logic <> :type_scope:x_'='_x not
R7349:7364 Poly <> countoddmembers' def
R7366:7366 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7368:7368 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7370:7370 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7372:7372 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 7412:7433 <> test_countoddmembers'3
R7456:7458 Coq.Init.Logic <> :type_scope:x_'='_x not
R7436:7451 Poly <> countoddmembers' def
R7453:7455 Poly <> nil constr
def 7496:7509 <> test_anon_fun'
R7542:7544 Coq.Init.Logic <> :type_scope:x_'='_x not
R7513:7522 Poly <> doit3times def
R7535:7537 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R7534:7534 Poly <> n var
R7538:7538 Poly <> n var
def 7584:7596 <> test_filter2'
R7707:7709 Coq.Init.Logic <> :type_scope:x_'='_x not
R7599:7604 Poly <> filter def
R7669:7670 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7677:7678 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7682:7683 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7687:7688 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7696:7697 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7700:7701 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7705:7706 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7671:7671 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7673:7674 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7676:7676 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7679:7679 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7681:7681 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7684:7684 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7686:7686 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7689:7689 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7691:7691 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7693:7693 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7695:7695 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7698:7699 Poly <> ::'['_']' not
R7702:7702 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7704:7704 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7616:7622 Basics <> beq_nat def
R7625:7630 Poly <> length def
R7632:7632 Poly <> l var
R7710:7711 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7715:7716 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7720:7721 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7725:7726 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7712:7712 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7714:7714 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7717:7717 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7719:7719 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7722:7722 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7724:7724 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R7765:7768 Coq.Init.Peano <> :nat_scope:x_'<='_x not
def 7783:7789 <> ble_nat
R7798:7800 Coq.Init.Datatypes <> nat ind
R7805:7808 Basics <> bool ind
R7821:7821 Poly <> n var
R7838:7841 Basics <> true constr
R7847:7847 Coq.Init.Datatypes <> S constr
R7859:7865 Basics <> beq_nat def
R7867:7867 Poly <> m var
R7888:7894 Poly <> ble_nat def
R7900:7903 Coq.Init.Peano <> pred syndef
R7905:7905 Poly <> m var
R7877:7881 Basics <> false constr
def 7927:7941 <> filter_even_gt7
R7948:7951 Poly <> list ind
R7953:7955 Coq.Init.Datatypes <> nat ind
R7960:7963 Poly <> list ind
R7965:7967 Coq.Init.Datatypes <> nat ind
R7974:7979 Poly <> filter def
R8021:8021 Poly <> l var
R7991:7994 Basics <> andb def
R8011:8015 Basics <> evenb def
R8017:8017 Poly <> n var
R7997:8003 Poly <> ble_nat def
R8007:8007 Poly <> n var
def 8033:8054 <> test_filter_even_gt7_1
R8095:8097 Coq.Init.Logic <> :type_scope:x_'='_x not
R8060:8074 Poly <> filter_even_gt7 def
R8076:8076 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8078:8078 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8080:8080 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8082:8082 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8084:8084 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8087:8087 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8089:8089 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8092:8092 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8094:8094 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8098:8098 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8101:8101 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8104:8104 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8106:8106 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 8142:8163 <> test_filter_even_gt7_2
R8199:8201 Coq.Init.Logic <> :type_scope:x_'='_x not
R8169:8183 Poly <> filter_even_gt7 def
R8185:8185 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8187:8187 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8189:8189 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8191:8191 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8194:8194 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8198:8198 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8202:8203 Poly <> ::'['_']' not
def 8241:8249 <> partition
R8270:8273 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8274:8277 Basics <> bool ind
R8269:8269 Poly <> X var
R8285:8288 Poly <> list ind
R8290:8290 Poly <> X var
R8301:8303 Poly <> :type_scope:x_'*'_x not
R8295:8298 Poly <> list ind
R8300:8300 Poly <> X var
R8304:8307 Poly <> list ind
R8309:8309 Poly <> X var
R8322:8322 Poly <> l var
R8333:8334 Poly <> ::'['_']' not
R8339:8339 Poly <> ::'('_x_','_x_')' not
R8342:8342 Poly <> ::'('_x_','_x_')' not
R8345:8345 Poly <> ::'('_x_','_x_')' not
R8340:8341 Poly <> ::'['_']' not
R8343:8344 Poly <> ::'['_']' not
R8352:8355 Poly <> ::x_'::'_x not
R8364:8367 Poly <> test var
R8460:8461 Poly <> ::'('_x_','_x_')' not
R8484:8486 Poly <> ::'('_x_','_x_')' not
R8514:8514 Poly <> ::'('_x_','_x_')' not
R8462:8464 Poly <> fst def
R8467:8475 Poly <> partition def
R8477:8480 Poly <> test var
R8488:8490 Poly <> ::x_'::'_x not
R8513:8513 Poly <> ::x_'::'_x not
R8491:8493 Poly <> snd def
R8496:8504 Poly <> partition def
R8506:8509 Poly <> test var
R8376:8376 Poly <> ::'('_x_','_x_')' not
R8404:8405 Poly <> ::'('_x_','_x_')' not
R8428:8429 Poly <> ::'('_x_','_x_')' not
R8378:8380 Poly <> ::x_'::'_x not
R8403:8403 Poly <> ::x_'::'_x not
R8381:8383 Poly <> fst def
R8386:8394 Poly <> partition def
R8396:8399 Poly <> test var
R8406:8408 Poly <> snd def
R8411:8419 Poly <> partition def
R8421:8424 Poly <> test var
def 8532:8546 <> test_partition1
R8575:8577 Coq.Init.Logic <> :type_scope:x_'='_x not
R8549:8557 Poly <> partition def
R8564:8564 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8566:8566 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8568:8568 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8570:8570 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8572:8572 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8574:8574 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8559:8562 Basics <> oddb def
R8578:8578 Poly <> ::'('_x_','_x_')' not
R8586:8587 Poly <> ::'('_x_','_x_')' not
R8593:8593 Poly <> ::'('_x_','_x_')' not
R8579:8579 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8581:8581 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8583:8583 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8585:8585 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8588:8588 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8590:8590 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8592:8592 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 8629:8643 <> test_partition2
R8680:8682 Coq.Init.Logic <> :type_scope:x_'='_x not
R8646:8654 Poly <> partition def
R8673:8673 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8675:8675 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8677:8677 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8679:8679 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8666:8670 Basics <> false constr
R8683:8683 Poly <> ::'('_x_','_x_')' not
R8686:8687 Poly <> ::'('_x_','_x_')' not
R8695:8695 Poly <> ::'('_x_','_x_')' not
R8684:8685 Poly <> ::'['_']' not
R8688:8688 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8690:8690 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8692:8692 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8694:8694 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 8733:8735 <> map
R8753:8754 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8755:8755 Poly <> Y var
R8752:8752 Poly <> X var
R8763:8766 Poly <> list ind
R8768:8768 Poly <> X var
R8773:8776 Poly <> list ind
R8778:8778 Poly <> Y var
R8791:8791 Poly <> l var
R8802:8803 Poly <> ::'['_']' not
R8808:8809 Poly <> ::'['_']' not
R8816:8819 Poly <> ::x_'::'_x not
R8825:8825 Poly <> ::x_'::'_x not
R8829:8832 Poly <> ::x_'::'_x not
R8840:8840 Poly <> ::x_'::'_x not
R8826:8826 Poly <> f var
R8833:8835 Poly <> map def
R8837:8837 Poly <> f var
def 8858:8866 <> test_map1
R8900:8902 Coq.Init.Logic <> :type_scope:x_'='_x not
R8869:8871 Poly <> map def
R8893:8893 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8895:8895 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8897:8897 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8899:8899 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8883:8886 Coq.Init.Peano <> plus syndef
R8890:8890 Poly <> x var
R8903:8903 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8905:8905 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8907:8907 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8909:8909 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 8946:8954 <> test_map2
R8977:8979 Coq.Init.Logic <> :type_scope:x_'='_x not
R8959:8961 Poly <> map def
R8968:8968 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8970:8970 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8972:8972 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8974:8974 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8976:8976 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8963:8966 Basics <> oddb def
R8980:8980 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8986:8986 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8991:8991 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8997:8997 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9002:9002 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8981:8985 Basics <> false constr
R8987:8990 Basics <> true constr
R8992:8996 Basics <> false constr
R8998:9001 Basics <> true constr
def 9039:9047 <> test_map3
R9095:9099 Coq.Init.Logic <> :type_scope:x_'='_x not
R9054:9056 Poly <> map def
R9086:9086 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9088:9088 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9090:9090 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9092:9092 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9094:9094 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9068:9068 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9076:9076 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9083:9083 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9069:9073 Basics <> evenb def
R9075:9075 Poly <> n var
R9077:9080 Basics <> oddb def
R9082:9082 Poly <> n var
R9100:9100 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9113:9113 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9126:9126 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9139:9139 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9152:9152 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9101:9101 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9106:9106 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9112:9112 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9102:9105 Basics <> true constr
R9107:9111 Basics <> false constr
R9114:9114 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9120:9120 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9125:9125 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9115:9119 Basics <> false constr
R9121:9124 Basics <> true constr
R9127:9127 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9132:9132 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9138:9138 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9128:9131 Basics <> true constr
R9133:9137 Basics <> false constr
R9140:9140 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9146:9146 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9151:9151 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9141:9145 Basics <> false constr
R9147:9150 Basics <> true constr
R9189:9191 Poly <> rev def
R9193:9193 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9195:9195 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9197:9197 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9199:9199 Poly <> ::'['_x_';'_'..'_';'_x_']' not
prf 9211:9219 <> map_distr
R9251:9254 Poly <> list ind
R9256:9256 Poly <> X var
R9263:9264 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9265:9265 Poly <> Y var
R9262:9262 Poly <> X var
R9296:9299 Coq.Init.Logic <> :type_scope:x_'='_x not
R9316:9316 Coq.Init.Logic <> :type_scope:x_'='_x not
R9272:9272 Poly <> ::x_'++'_x not
R9281:9286 Poly <> ::x_'++'_x not
R9295:9295 Poly <> ::x_'++'_x not
R9273:9275 Poly <> map def
R9279:9280 Poly <> l1 var
R9277:9277 Poly <> f var
R9287:9289 Poly <> map def
R9293:9294 Poly <> l2 var
R9291:9291 Poly <> f var
R9300:9302 Poly <> map def
R9309:9312 Poly <> ::x_'++'_x not
R9307:9308 Poly <> l1 var
R9313:9314 Poly <> l2 var
R9304:9304 Poly <> f var
prf 9453:9459 <> map_rev
R9487:9488 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9489:9489 Poly <> Y var
R9486:9486 Poly <> X var
R9495:9498 Poly <> list ind
R9500:9500 Poly <> X var
R9507:9507 Coq.Init.Logic <> :type_scope:x_'='_x not
R9521:9525 Coq.Init.Logic <> :type_scope:x_'='_x not
R9539:9539 Coq.Init.Logic <> :type_scope:x_'='_x not
R9508:9510 Poly <> map def
R9515:9517 Poly <> rev def
R9519:9519 Poly <> l var
R9512:9512 Poly <> f var
R9526:9528 Poly <> rev def
R9531:9533 Poly <> map def
R9537:9537 Poly <> l var
R9535:9535 Poly <> f var
R9653:9661 Poly <> map_distr thm
R9653:9661 Poly <> map_distr thm
R9653:9661 Poly <> map_distr thm
def 9692:9699 <> flat_map
R9718:9719 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9720:9723 Poly <> list ind
R9725:9725 Poly <> Y var
R9717:9717 Poly <> X var
R9731:9734 Poly <> list ind
R9736:9736 Poly <> X var
R9741:9744 Poly <> list ind
R9746:9746 Poly <> Y var
R9759:9759 Poly <> l var
R9771:9772 Poly <> ::'['_']' not
R9777:9778 Poly <> ::'['_']' not
R9785:9788 Poly <> ::x_'::'_x not
R9797:9801 Poly <> ::x_'++'_x not
R9814:9814 Poly <> ::x_'++'_x not
R9794:9794 Poly <> f var
R9802:9809 Poly <> flat_map def
R9811:9811 Poly <> f var
def 9832:9845 <> test_flat_map1
R9885:9889 Coq.Init.Logic <> :type_scope:x_'='_x not
R9850:9857 Poly <> flat_map def
R9878:9878 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9880:9880 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9882:9882 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9884:9884 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9869:9869 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9871:9871 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9873:9873 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9875:9875 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9870:9870 Poly <> n var
R9872:9872 Poly <> n var
R9874:9874 Poly <> n var
R9890:9890 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9892:9893 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9895:9896 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9898:9899 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9901:9902 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9904:9905 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9907:9908 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9910:9911 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9913:9914 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9916:9916 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 9954:9963 <> map_option
R9982:9983 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9984:9984 Poly <> Y var
R9981:9981 Poly <> X var
R9992:9997 Poly <> option ind
R9999:9999 Poly <> X var
R10004:10009 Poly <> option ind
R10011:10011 Poly <> Y var
R10024:10024 Poly <> x var
R10035:10038 Poly <> None constr
R10043:10046 Poly <> None constr
R10052:10055 Poly <> Some constr
R10062:10065 Poly <> Some constr
R10068:10068 Poly <> f var
def 10090:10093 <> fold
R10111:10112 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10114:10115 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10116:10116 Poly <> Y var
R10113:10113 Poly <> Y var
R10110:10110 Poly <> X var
R10124:10127 Poly <> list ind
R10129:10129 Poly <> X var
R10137:10137 Poly <> Y var
R10142:10142 Poly <> Y var
R10155:10155 Poly <> l var
R10167:10168 Poly <> ::'['_']' not
R10173:10173 Poly <> y var
R10180:10183 Poly <> ::x_'::'_x not
R10189:10189 Poly <> f var
R10194:10197 Poly <> fold def
R10203:10203 Poly <> y var
R10199:10199 Poly <> f var
R10222:10225 Poly <> fold def
R10232:10232 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10234:10234 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10236:10236 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10238:10238 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10240:10240 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10227:10230 Coq.Init.Peano <> plus syndef
R10252:10255 Poly <> fold def
R10257:10260 Basics <> andb def
def 10273:10285 <> fold_example1
R10312:10314 Coq.Init.Logic <> :type_scope:x_'='_x not
R10291:10294 Poly <> fold def
R10301:10301 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10303:10303 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10305:10305 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10307:10307 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10309:10309 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10296:10299 Coq.Init.Peano <> mult syndef
def 10352:10364 <> fold_example2
R10407:10409 Coq.Init.Logic <> :type_scope:x_'='_x not
R10370:10373 Poly <> fold def
R10403:10406 Basics <> true constr
R10380:10380 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10385:10385 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10390:10390 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10396:10396 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10401:10401 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10381:10384 Basics <> true constr
R10386:10389 Basics <> true constr
R10391:10395 Basics <> false constr
R10397:10400 Basics <> true constr
R10375:10378 Basics <> andb def
R10410:10414 Basics <> false constr
def 10450:10462 <> fold_example3
R10498:10500 Coq.Init.Logic <> :type_scope:x_'='_x not
R10468:10471 Poly <> fold def
R10496:10497 Poly <> ::'['_']' not
R10477:10477 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10481:10481 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10484:10484 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10490:10490 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10494:10494 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10478:10478 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10480:10480 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10482:10483 Poly <> ::'['_']' not
R10485:10485 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10487:10487 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10489:10489 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10491:10491 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10493:10493 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10473:10475 Poly <> app def
R10501:10501 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10503:10503 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10505:10505 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10507:10507 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10509:10509 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 10549:10556 <> constfun
R10574:10574 Poly <> X var
R10581:10584 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10585:10585 Poly <> X var
R10578:10580 Coq.Init.Datatypes <> nat ind
R10601:10601 Poly <> x var
def 10616:10620 <> ftrue
R10625:10632 Poly <> constfun def
R10634:10637 Basics <> true constr
R10646:10650 Poly <> ftrue def
R10661:10665 Poly <> ftrue def
def 10679:10695 <> constfun_example1
R10706:10708 Coq.Init.Logic <> :type_scope:x_'='_x not
R10699:10703 Poly <> ftrue def
R10709:10712 Basics <> true constr
def 10748:10764 <> constfun_example2
R10783:10785 Coq.Init.Logic <> :type_scope:x_'='_x not
R10769:10776 Poly <> constfun def
R10821:10824 Coq.Init.Peano <> plus syndef
def 10840:10844 <> plus3
R10849:10852 Coq.Init.Peano <> plus syndef
def 10866:10875 <> test_plus3
R10886:10888 Coq.Init.Logic <> :type_scope:x_'='_x not
R10879:10883 Poly <> plus3 def
def 10925:10935 <> test_plus3'
R10957:10959 Coq.Init.Logic <> :type_scope:x_'='_x not
R10939:10948 Poly <> doit3times def
R10950:10954 Poly <> plus3 def
def 10996:11007 <> test_plus3''
R11032:11034 Coq.Init.Logic <> :type_scope:x_'='_x not
R11011:11020 Poly <> doit3times def
R11023:11026 Coq.Init.Peano <> plus syndef
mod 11071:11079 <> Exercises
def 11094:11104 Exercises fold_length
R11122:11125 Poly <> list ind
R11127:11127 Poly <> X var
R11132:11134 Coq.Init.Datatypes <> nat ind
R11141:11144 Poly <> fold def
R11163:11163 Poly <> l var
R11158:11158 Coq.Init.Datatypes <> S constr
R11160:11160 Poly <> n var
def 11176:11192 Exercises test_fold_length1
R11215:11217 Coq.Init.Logic <> :type_scope:x_'='_x not
R11196:11206 Poly Exercises fold_length def
R11208:11208 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R11210:11210 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R11212:11212 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R11214:11214 Poly <> ::'['_x_';'_'..'_';'_x_']' not
prf 11255:11273 Exercises fold_length_correct
R11300:11303 Poly <> list ind
R11305:11305 Poly <> X var
R11324:11326 Coq.Init.Logic <> :type_scope:x_'='_x not
R11311:11321 Poly Exercises fold_length def
R11323:11323 Poly <> l var
R11327:11332 Poly <> length def
R11334:11334 Poly <> l var
def 11457:11464 Exercises fold_map
R11485:11488 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11489:11489 Poly <> Y var
R11484:11484 Poly <> X var
R11497:11500 Poly <> list ind
R11502:11502 Poly <> X var
R11507:11510 Poly <> list ind
R11512:11512 Poly <> Y var
R11519:11522 Poly <> fold def
R11550:11551 Poly <> ::'['_']' not
R11548:11548 Poly <> l var
R11536:11536 Poly <> ::x_'::'_x not
R11540:11544 Poly <> ::x_'::'_x not
R11537:11537 Poly <> f var
R11539:11539 Poly <> x var
R11545:11545 Poly <> y var
prf 11563:11578 Exercises fold_map_correct
R11605:11606 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11607:11607 Poly <> Y var
R11604:11604 Poly <> X var
R11615:11618 Poly <> list ind
R11620:11620 Poly <> X var
R11626:11626 Coq.Init.Logic <> :type_scope:x_'='_x not
R11634:11638 Coq.Init.Logic <> :type_scope:x_'='_x not
R11651:11651 Coq.Init.Logic <> :type_scope:x_'='_x not
R11627:11629 Poly <> map def
R11633:11633 Poly <> l var
R11631:11631 Poly <> f var
R11639:11646 Poly Exercises fold_map def
R11650:11650 Poly <> l var
R11648:11648 Poly <> f var
def 11785:11794 Exercises prod_curry
R11814:11814 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11818:11820 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11821:11821 Poly <> Z var
R11816:11816 Poly <> :type_scope:x_'*'_x not
R11815:11815 Poly <> X var
R11817:11817 Poly <> Y var
R11827:11827 Poly <> X var
R11833:11833 Poly <> Y var
R11838:11838 Poly <> Z var
R11846:11846 Poly <> f var
R11848:11848 Poly <> ::'('_x_','_x_')' not
R11850:11850 Poly <> ::'('_x_','_x_')' not
R11852:11852 Poly <> ::'('_x_','_x_')' not
R11849:11849 Poly <> a var
R11851:11851 Poly <> b var
def 11866:11877 Exercises prod_uncurry
R11898:11899 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11901:11902 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11903:11903 Poly <> Z var
R11900:11900 Poly <> Y var
R11897:11897 Poly <> X var
R11910:11910 Poly <> :type_scope:x_'*'_x not
R11909:11909 Poly <> X var
R11911:11911 Poly <> Y var
R11916:11916 Poly <> Z var
R11924:11924 Poly <> f var
R11935:11937 Poly <> snd def
R11939:11939 Poly <> p var
R11927:11929 Poly <> fst def
R11931:11931 Poly <> p var
def 11952:11961 Exercises test_map1'
R11984:11986 Coq.Init.Logic <> :type_scope:x_'='_x not
R11964:11966 Poly <> map def
R11977:11977 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R11979:11979 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R11981:11981 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R11983:11983 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R11969:11972 Coq.Init.Peano <> plus syndef
R11987:11987 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R11989:11989 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R11991:11991 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R11993:11993 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R12029:12038 Poly Exercises prod_curry def
R12100:12111 Poly Exercises prod_uncurry def
prf 12175:12184 Exercises pair_parts
R12212:12212 Poly <> :type_scope:x_'*'_x not
R12211:12211 Poly <> X var
R12213:12213 Poly <> Y var
R12234:12236 Coq.Init.Logic <> :type_scope:x_'='_x not
R12220:12220 Poly <> ::'('_x_','_x_')' not
R12226:12227 Poly <> ::'('_x_','_x_')' not
R12233:12233 Poly <> ::'('_x_','_x_')' not
R12221:12223 Poly <> fst def
R12225:12225 Poly <> p var
R12228:12230 Poly <> snd def
R12232:12232 Poly <> p var
R12237:12237 Poly <> p var
prf 12310:12322 Exercises uncurry_curry
R12351:12351 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12355:12357 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12358:12358 Poly <> Z var
R12353:12353 Poly <> :type_scope:x_'*'_x not
R12352:12352 Poly <> X var
R12354:12354 Poly <> Y var
R12365:12365 Poly <> :type_scope:x_'*'_x not
R12364:12364 Poly <> X var
R12366:12366 Poly <> Y var
R12401:12403 Coq.Init.Logic <> :type_scope:x_'='_x not
R12372:12383 Poly Exercises prod_uncurry def
R12400:12400 Poly <> p var
R12386:12395 Poly Exercises prod_curry def
R12397:12397 Poly <> f var
R12404:12404 Poly <> f var
R12406:12406 Poly <> p var
R12445:12454 Poly Exercises prod_curry def
R12457:12468 Poly Exercises prod_uncurry def
R12482:12491 Poly Exercises pair_parts thm
R12482:12491 Poly Exercises pair_parts thm
R12482:12491 Poly Exercises pair_parts thm
mod 12520:12525 <> Exercises.Church
def 12539:12541 Exercises.Church nat
R12563:12563 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12570:12574 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12576:12579 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12580:12580 Poly <> X var
R12575:12575 Poly <> X var
R12565:12568 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12569:12569 Poly <> X var
R12564:12564 Poly <> X var
def 12594:12596 Exercises.Church one
R12600:12602 Poly Exercises.Church nat def
R12628:12629 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12630:12630 Poly <> X var
R12627:12627 Poly <> X var
R12636:12636 Poly <> X var
R12642:12642 Poly <> f var
R12644:12644 Poly <> x var
def 12658:12660 Exercises.Church two
R12664:12666 Poly Exercises.Church nat def
R12692:12693 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12694:12694 Poly <> X var
R12691:12691 Poly <> X var
R12700:12700 Poly <> X var
R12706:12706 Poly <> f var
R12709:12709 Poly <> f var
R12711:12711 Poly <> x var
def 12726:12729 Exercises.Church zero
R12733:12735 Poly Exercises.Church nat def
R12761:12762 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12763:12763 Poly <> X var
R12760:12760 Poly <> X var
R12769:12769 Poly <> X var
R12775:12775 Poly <> x var
def 12790:12794 Exercises.Church three
R12798:12800 Poly Exercises.Church nat def
R12806:12815 Poly <> doit3times def
def 12830:12833 Exercises.Church succ
R12840:12842 Poly Exercises.Church nat def
R12847:12849 Poly Exercises.Church nat def
R12873:12874 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12875:12875 Poly <> X var
R12872:12872 Poly <> X var
R12881:12881 Poly <> X var
R12887:12887 Poly <> f var
R12890:12890 Poly <> n var
R12896:12896 Poly <> x var
R12894:12894 Poly <> f var
R12892:12892 Poly <> X var
def 12909:12914 Exercises.Church succ_1
R12927:12929 Coq.Init.Logic <> :type_scope:x_'='_x not
R12918:12921 Poly Exercises.Church succ def
R12923:12926 Poly Exercises.Church zero def
R12930:12932 Poly Exercises.Church one def
def 12968:12973 Exercises.Church succ_2
R12985:12987 Coq.Init.Logic <> :type_scope:x_'='_x not
R12977:12980 Poly Exercises.Church succ def
R12982:12984 Poly Exercises.Church one def
R12988:12990 Poly Exercises.Church two def
def 13026:13031 Exercises.Church succ_3
R13043:13045 Coq.Init.Logic <> :type_scope:x_'='_x not
R13035:13038 Poly Exercises.Church succ def
R13040:13042 Poly Exercises.Church two def
R13046:13050 Poly Exercises.Church three def
def 13090:13093 Exercises.Church plus
R13102:13104 Poly Exercises.Church nat def
R13109:13111 Poly Exercises.Church nat def
R13137:13138 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13139:13139 Poly <> X var
R13136:13136 Poly <> X var
R13145:13145 Poly <> X var
R13151:13151 Poly <> n var
R13158:13158 Poly <> m var
R13164:13164 Poly <> x var
R13162:13162 Poly <> f var
R13160:13160 Poly <> X var
R13155:13155 Poly <> f var
R13153:13153 Poly <> X var
def 13177:13182 Exercises.Church plus_1
R13199:13201 Coq.Init.Logic <> :type_scope:x_'='_x not
R13186:13189 Poly Exercises.Church plus def
R13196:13198 Poly Exercises.Church one def
R13191:13194 Poly Exercises.Church zero def
R13202:13204 Poly Exercises.Church one def
def 13240:13245 Exercises.Church plus_2
R13263:13265 Coq.Init.Logic <> :type_scope:x_'='_x not
R13249:13252 Poly Exercises.Church plus def
R13258:13262 Poly Exercises.Church three def
R13254:13256 Poly Exercises.Church two def
R13266:13269 Poly Exercises.Church plus def
R13277:13279 Poly Exercises.Church two def
R13271:13275 Poly Exercises.Church three def
def 13315:13320 Exercises.Church plus_3
R13351:13353 Coq.Init.Logic <> :type_scope:x_'='_x not
R13326:13329 Poly Exercises.Church plus def
R13346:13350 Poly Exercises.Church three def
R13332:13335 Poly Exercises.Church plus def
R13341:13343 Poly Exercises.Church two def
R13337:13339 Poly Exercises.Church two def
R13354:13357 Poly Exercises.Church plus def
R13364:13367 Poly Exercises.Church plus def
R13375:13379 Poly Exercises.Church three def
R13369:13373 Poly Exercises.Church three def
R13359:13361 Poly Exercises.Church one def
R13421:13423 Poly Exercises.Church nat def
R13428:13431 Poly Exercises.Church plus def
R13439:13439 Poly <> n var
R13433:13437 Poly Exercises.Church three def
R13450:13453 Poly Exercises.Church succ def
R13456:13459 Poly Exercises.Church succ def
R13461:13464 Poly Exercises.Church zero def
R13477:13480 Poly Exercises.Church plus def
R13482:13486 Poly Exercises.Church three def
R13489:13491 Poly Exercises.Church two def
R13503:13506 Poly Exercises.Church plus def
R13514:13517 Poly Exercises.Church zero def
R13508:13512 Poly Exercises.Church three def
R13530:13533 Poly Exercises.Church plus def
R13535:13539 Poly Exercises.Church three def
def 13555:13558 Exercises.Church mult
R13567:13569 Poly Exercises.Church nat def
R13574:13576 Poly Exercises.Church nat def
R13602:13603 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13604:13604 Poly <> X var
R13601:13601 Poly <> X var
R13610:13610 Poly <> X var
R13616:13616 Poly <> n var
R13628:13628 Poly <> x var
R13621:13621 Poly <> m var
R13625:13625 Poly <> f var
R13623:13623 Poly <> X var
R13618:13618 Poly <> X var
def 13640:13645 Exercises.Church mult_1
R13661:13663 Coq.Init.Logic <> :type_scope:x_'='_x not
R13649:13652 Poly Exercises.Church mult def
R13658:13660 Poly Exercises.Church one def
R13654:13656 Poly Exercises.Church one def
R13664:13666 Poly Exercises.Church one def
def 13702:13707 Exercises.Church mult_2
R13739:13741 Coq.Init.Logic <> :type_scope:x_'='_x not
R13711:13714 Poly Exercises.Church mult def
R13722:13725 Poly Exercises.Church plus def
R13733:13737 Poly Exercises.Church three def
R13727:13731 Poly Exercises.Church three def
R13716:13719 Poly Exercises.Church zero def
R13742:13745 Poly Exercises.Church zero def
def 13781:13786 Exercises.Church mult_3
R13804:13806 Coq.Init.Logic <> :type_scope:x_'='_x not
R13790:13793 Poly Exercises.Church mult def
R13799:13803 Poly Exercises.Church three def
R13795:13797 Poly Exercises.Church two def
R13807:13810 Poly Exercises.Church plus def
R13818:13822 Poly Exercises.Church three def
R13812:13816 Poly Exercises.Church three def
R13878:13879 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13880:13880 Poly <> X var
R13877:13877 Poly <> X var
R13886:13890 Poly Exercises.Church three def
R13894:13894 Poly <> f var
R13892:13892 Poly <> X var
R13902:13907 Poly Exercises.Church <> mod
R13914:13922 Poly Exercises <> mod
